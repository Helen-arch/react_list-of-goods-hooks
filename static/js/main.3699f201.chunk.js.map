{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortTypes","goodsFromServer","sortHandlers","ALPHABET","good1","good2","localeCompare","LENGTH","length","DEFAULT","App","useState","sortType","setSortType","isReversed","setIsReversed","listOfGoods","nextListOfGoods","sortHandler","sort","reverse","getPreparedGoods","isResetDisplayed","toString","className","type","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,kBAAAA,E,oBAAAA,E,iBAAAA,M,KAML,IAAME,EAAe,CACnBC,SAAU,SAACC,EAAeC,GAAhB,OAAkCD,EAAME,cAAcD,IAChEE,OAAQ,SAACH,EAAeC,GAAhB,OAAkCD,EAAMI,OAASH,EAAMG,QAC/DC,QAAS,kBAAM,IAsBJC,EAAM,WACjB,MAAgCC,mBAASX,EAAUS,SAAnD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAtBiB,SACvBA,EACAJ,EACAE,GAEA,IAAMG,EAAe,YAAOD,GACtBE,EAAchB,EAAaU,GAUjC,OARIM,GACFD,EAAgBE,KAAKD,GAGnBJ,GACFG,EAAgBG,UAGXH,EAMaI,CAAiBpB,EAAiBW,EAAUE,GAE1DQ,EAAmBN,EAAYO,aAAetB,EAAgBsB,YAC/DX,IAAaZ,EAAUS,QAmB5B,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBZ,IAAaZ,EAAUG,SAAW,GAAK,YACpEuB,QAvByB,WAC/Bb,EAAYb,EAAUG,WAmBlB,iCAQA,wBACEsB,KAAK,SACLD,UAAS,4BAAuBZ,IAAaZ,EAAUO,OAAS,GAAK,YACrEmB,QA3BmB,WACzBb,EAAYb,EAAUO,SAuBlB,4BAQA,wBACEkB,KAAK,SACLD,UAAS,4BAAuBV,EAAa,GAAK,YAClDY,QA/Bc,WACpBX,GAAc,SAAAY,GAAI,OAAKA,MA2BnB,qBAQCL,GACC,wBACEG,KAAK,SACLD,UAAU,4BACVE,QApCU,WAClBb,EAAYb,EAAUS,SACtBM,GAAc,IA+BR,sBAUJ,6BACGC,EAAYY,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3699f201.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortTypes {\n  DEFAULT = 'DEFAULT',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\nconst sortHandlers = {\n  ALPHABET: (good1: string, good2: string) => good1.localeCompare(good2),\n  LENGTH: (good1: string, good2: string) => good1.length - good2.length,\n  DEFAULT: () => 0,\n};\n\nconst getPreparedGoods = (\n  listOfGoods: string[],\n  sortType: SortTypes,\n  isReversed: boolean,\n) => {\n  const nextListOfGoods = [...listOfGoods];\n  const sortHandler = sortHandlers[sortType];\n\n  if (sortHandler) {\n    nextListOfGoods.sort(sortHandler);\n  }\n\n  if (isReversed) {\n    nextListOfGoods.reverse();\n  }\n\n  return nextListOfGoods;\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SortTypes.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n  const listOfGoods = getPreparedGoods(goodsFromServer, sortType, isReversed);\n\n  const isResetDisplayed = listOfGoods.toString() !== goodsFromServer.toString()\n    || sortType !== SortTypes.DEFAULT;\n\n  const handleSortAlphabetically = () => {\n    setSortType(SortTypes.ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortTypes.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const handleReset = () => {\n    setSortType(SortTypes.DEFAULT);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortTypes.ALPHABET ? '' : 'is-light'}`}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortTypes.LENGTH ? '' : 'is-light'}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {isResetDisplayed && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {listOfGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}